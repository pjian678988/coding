组合模式
将对象组合成树形结构以表示“部分-整体”的层次结构。组合模式使得用户对单个对象和组合对象的
使用具有一致性

组合模式里有透明方式和安全方式两种：
透明方式：如代码和uml类图所示，在Component中声明所有用来管理子对象的方法，其中包括add,remove
。这样实现component接口的所有子类都具备了add和remove。这样做的好处是叶节点和枝节点对于外界没有
区别，它们具备完全一致的行为接口。但问题也很明显，因为Leaf类本身不具备add,remove方法，所以实现
它们没有意义的。

安全方式：在Component接口不去声明add和remove方法，而是在Composite声明所有用来管理子类对象的方法
，不过树叶和树枝就具有不同的接口，客户端的调用需要做相应的判断，带来不便。

适用场景：
需求中是体现部分和整体层次的结构时，希望用户可以忽略组合对象与单个对象的不同，统一地使用组合结构
中的所有对象时，就应该考虑用组合模式。

组合模式定义了包含基本对象和组合对象的类层次结构。基本对象可以被组合成更复杂的组合对象，而这个
组合对象又可以被组合，这样不断地递归下去，客户代码中，任何用到基本对象的地方都可以使用组合对象

组合模式让客户可以一致地使用组合结构和单个对象
